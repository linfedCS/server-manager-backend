import os
from dotenv import load_dotenv
from fastapi import HTTPException
from psycopg_pool import ConnectionPool

load_dotenv()

pool = None

def init_pool():
    global pool
    pool = ConnectionPool(
        conninfo=f"""
            dbname={os.getenv('DB_NAME')}
            user={os.getenv('DB_USER')}
            password={os.getenv('DB_PASSWORD')}
            host={os.getenv('DB_HOST')}
            port={os.getenv('DB_PORT')}
        """,
        min_size=1,
        max_size=10,
    )

    # Создание таблиц
    with pool.connection() as conn:
        with conn.cursor() as cur:
            cur.execute("""
                CREATE TABLE IF NOT EXISTS servers(
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    name TEXT NOT NULL,
                    ip TEXT NOT NULL,
                    port INTEGER NOT NULL,
                    server_id INTEGER NOT NULL
                )
            """)
            cur.execute("""
                CREATE TABLE IF NOT EXISTS maps(
                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    name TEXT NOT NULL,
                    map_id INTEGER NOT NULL
                )
            """)
    print("Database pool initialized and tables created")

def close_pool():
    global pool
    if pool:
        pool.close()
        print("Database pool closed")

def get_db_connection():
    if not pool:
        raise HTTPException(status_code=500, detail="Database pool not initialized")
    return pool.connection()
